*** Settings ***
Resource          Resources/Common_Library.txt
Resource          Resources/Common.txt

*** Variables ***
${LOCATOR_RETURNED_PAGE}    __returned_page@__page
${LOCATOR_RETURNED_PAGE_SIZE}    __returned_page_size@__page_size

*** Keywords ***
User is in Todo Page
    Click Link    Todo

Should List Recent Todo Items from _ with limit _
    [Arguments]    ${offset}    ${count}
    Comment    Query Top 5 Todos
    @{query_results}    Query    select item, date from todo where owner = ${USER_ID} order by date desc limit ${offset}, ${count}
    Comment    Reformat the dates
    ${query_todo_item}    ${query_todo_dates}=    Split By Columns    ${query_results}
    @{query_todo_dates_formatted}=    Convert Date Format    ${query_todo_dates}    %Y-%m-%d %H:%M:%S.%f    %B %d, %Y
    @{todos_from_query}=    Combine By Columns    ${query_todo_item}    ${query_todo_dates_formatted}
    Comment    Get Todo items in Web Page
    @{todo_items_from_webpage}=    Get All Text    xpath=//div[contains(@class, '_todo_item')]//span[contains(@class, 'ng-binding')]
    @{todo_dates_from_webpage}=    Get All Text    xpath=//div[contains(@class, '_todo_date')]//span[contains(@class, 'ng-binding')]
    @{todos_from_webpage}=    Combine By Columns    ${todo_items_from_webpage}    ${todo_dates_from_webpage}
    Comment    Compare Todo items from Query vs Todo items from Web Page
    Log    Comparing query vs webpage : @{todos_from_query} vs @{todos_from_webpage}
    Capture Page Screenshot
    Should Be Equal    ${todos_from_query}    ${todos_from_webpage}

User Goes to Previous Todo Page
    ${current_page}=    Get Element Attribute    ${LOCATOR_RETURNED_PAGE}
    Click Element    //button[@title='Previous Page']
    ${next_page}=    Evaluate    str(${current_page} - 1)
    Wait Until Keyword Succeeds    5s    1s    Element Attribute Should Be    ${LOCATOR_RETURNED_PAGE}    ${next_page}

User Goes to Next Todo Page
    ${current_page}=    Get Element Attribute    ${LOCATOR_RETURNED_PAGE}
    Click Element    //button[@title='Next Page']
    ${next_page}=    Evaluate    str(${current_page} + 1)
    Wait Until Keyword Succeeds    5s    1s    Element Attribute Should Be    ${LOCATOR_RETURNED_PAGE}    ${next_page}

User Goes to Todo Page
    [Arguments]    ${new_page}
    Input Text    css=.ngPagerCurrent    ${new_page}
    Wait Until Keyword Succeeds    5s    1s    Element Attribute Should Be    ${LOCATOR_RETURNED_PAGE}    ${new_page}

User Changes Page Size To
    [Arguments]    ${new_page_size}
    Select From List By Value    //*[@ng-model="pagingOptions.pageSize"]    ${new_page_size}
    Wait Until Keyword Succeeds    5s    1s    Element Attribute Should Be    ${LOCATOR_RETURNED_PAGE_SIZE}    ${new_page_size}

Total Count Should be Correct
    @{query_results}=    Query    select count(1) from todo where owner = ${USER_ID}
    ${row_count}=    Set Variable    ${query_results[0][0]}
    Page Should Contain    Total Items: ${row_count}

Total Number of Pages Should be Correct
    @{query_results}=    Query    select count(1) from todo where owner = ${USER_ID}
    ${row_count}=    Set Variable    ${query_results[0][0]}
    ${page_size}=    Get Selected List Value    //*[@ng-model="pagingOptions.pageSize"]
    ${expected_num_of_pages}=    Evaluate    '/ ' + str(int(math.ceil(${row_count}/(1.0 * ${page_size}))))    math
    ${actual_num_of_pages}=    Get Text    css=.ngGridMaxPagesNumber
    Should Be Equal    ${expected_num_of_pages}    ${actual_num_of_pages}
